{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["// selecting canvas\nconst canvas = document.querySelector('.canvas-draw');\nconst ctx = canvas.getContext('2d');\n\n// clear button\nconst clearButton = document.querySelector(\"a.button-clear\")\n\n// knob buttons\nconst knob = document.querySelectorAll(\"div.knob\")\n// const secondKnob = document.querySelector(\"div.knob_inner-right\")\n\n// setting up our canvas for drawing\nctx.lineJoin = 'round';\nctx.lineCap = 'round';\nctx.lineWidth = 25;\n\n// the color of the stroke\nlet hue = 0;\nctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n\nconst MOVE_AMOUNT = 10;\n\n// getting the width and height of the canvas to draw from random points\nconst width = canvas.width;\nconst height = canvas.height;\nlet x = Math.floor(Math.random() * width);\nlet y = Math.floor(Math.random() * height);\n\n// drawing a point in our canvas\nctx.beginPath();\nctx.moveTo(x, y);\nctx.lineTo(x, y);\nctx.stroke();\n\n// draw function\nfunction draw(options) {\n\tconsole.log(options.key);\n\n\t// incrementing the hue\n\thue += 10;\n\tctx.strokeStyle = `hsl(${hue}, 80%, 50%)`;\n\n\t// start path\n\tctx.beginPath();\n\tctx.moveTo(x, y);\n\n\t// x and y depend on arrow key input\n\tswitch (options.key) {\n\t\tcase \"ArrowUp\":\n\t\t\ty -= MOVE_AMOUNT;\n\t\t\tbreak\n\t\tcase \"ArrowRight\":\n\t\t\tx += MOVE_AMOUNT;\n\t\t\tbreak\n\t\tcase \"ArrowDown\":\n\t\t\ty += MOVE_AMOUNT;\n\t\t\tbreak\n\t\tcase \"ArrowLeft\":\n\t\t\tx -= MOVE_AMOUNT;\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tctx.lineTo(x, y);\n\tctx.stroke()\t\n}\n\n// clear the canvas\nfunction clearCanvas() {\n\tctx.clearRect(0, 0, width, height);\n\tctx.beginPath();\n\tctx.moveTo(x, y);\n\tctx.lineTo(x, y);\n\tctx.stroke();\n}\n\n// a function to handle arrow keys input\nfunction handleKey(e) {\n\tif (e.key.includes(\"Arrow\")) {\n\t\tdraw({key: e.key});\n\t\tconsole.log(\"handle key\");\n\t\te.preventDefault()\n\t}\n\n\t// adding animation to the knobs according to arrow input\n\tswitch (e.key) {\n\t\tcase \"ArrowLeft\":\n\t\t\t// specifics toggles classes are made in webflow\n\t\t\tknob[0].classList.toggle(\"rotate-left\");\n\t\t\tbreak;\n\t\tcase \"ArrowRight\":\n\t\t\tknob[0].classList.toggle(\"rotate-right\");\n\t\t\tbreak;\n\t\tcase \"ArrowUp\":\n\t\t\tknob[1].classList.toggle(\"rotate-right\");\n\t\t\tbreak;\n\t\tcase \"ArrowDown\":\n\t\t\tknob[1].classList.toggle(\"rotate-left\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nwindow.addEventListener(\"keydown\", handleKey);\nclearButton.addEventListener(\"click\", clearCanvas)\n"],
  "mappings": "MACA,IAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAMD,EAAO,WAAW,IAAI,EAG5BE,EAAc,SAAS,cAAc,gBAAgB,EAGrDC,EAAO,SAAS,iBAAiB,UAAU,EAIjDF,EAAI,SAAW,QACfA,EAAI,QAAU,QACdA,EAAI,UAAY,GAGhB,IAAIG,EAAM,EACVH,EAAI,YAAc,OAAOG,gBAEzB,IAAMC,EAAc,GAGdC,EAAQN,EAAO,MACfO,EAASP,EAAO,OAClBQ,EAAI,KAAK,MAAM,KAAK,OAAO,EAAIF,CAAK,EACpCG,EAAI,KAAK,MAAM,KAAK,OAAO,EAAIF,CAAM,EAGzCN,EAAI,UAAU,EACdA,EAAI,OAAOO,EAAGC,CAAC,EACfR,EAAI,OAAOO,EAAGC,CAAC,EACfR,EAAI,OAAO,EAGX,SAASS,EAAKC,EAAS,CAYtB,OAXA,QAAQ,IAAIA,EAAQ,GAAG,EAGvBP,GAAO,GACPH,EAAI,YAAc,OAAOG,eAGzBH,EAAI,UAAU,EACdA,EAAI,OAAOO,EAAGC,CAAC,EAGPE,EAAQ,IAAK,CACpB,IAAK,UACJF,GAAKJ,EACL,MACD,IAAK,aACJG,GAAKH,EACL,MACD,IAAK,YACJI,GAAKJ,EACL,MACD,IAAK,YACJG,GAAKH,EACL,MACD,QACC,KACF,CAEAJ,EAAI,OAAOO,EAAGC,CAAC,EACfR,EAAI,OAAO,CACZ,CAGA,SAASW,GAAc,CACtBX,EAAI,UAAU,EAAG,EAAGK,EAAOC,CAAM,EACjCN,EAAI,UAAU,EACdA,EAAI,OAAOO,EAAGC,CAAC,EACfR,EAAI,OAAOO,EAAGC,CAAC,EACfR,EAAI,OAAO,CACZ,CAGA,SAASY,EAAUC,EAAG,CAQrB,OAPIA,EAAE,IAAI,SAAS,OAAO,IACzBJ,EAAK,CAAC,IAAKI,EAAE,GAAG,CAAC,EACjB,QAAQ,IAAI,YAAY,EACxBA,EAAE,eAAe,GAIVA,EAAE,IAAK,CACd,IAAK,YAEJX,EAAK,GAAG,UAAU,OAAO,aAAa,EACtC,MACD,IAAK,aACJA,EAAK,GAAG,UAAU,OAAO,cAAc,EACvC,MACD,IAAK,UACJA,EAAK,GAAG,UAAU,OAAO,cAAc,EACvC,MACD,IAAK,YACJA,EAAK,GAAG,UAAU,OAAO,aAAa,EACtC,MACD,QACC,KACF,CACD,CAEA,OAAO,iBAAiB,UAAWU,CAAS,EAC5CX,EAAY,iBAAiB,QAASU,CAAW",
  "names": ["canvas", "ctx", "clearButton", "knob", "hue", "MOVE_AMOUNT", "width", "height", "x", "y", "draw", "options", "clearCanvas", "handleKey", "e"]
}
